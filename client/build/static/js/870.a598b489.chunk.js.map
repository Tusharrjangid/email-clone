{"version":3,"file":"static/js/870.a598b489.chunk.js","mappings":"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","sources":["components/Email.jsx","components/common/NoMails.jsx","components/Emails.jsx","constants/constant.js","services/api.js","hooks/useApi.jsx","services/api.urls.js"],"sourcesContent":["import { Box, Checkbox, Typography, styled } from '@mui/material'\r\nimport { Star, StarBorder } from '@mui/icons-material'\r\nimport React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {routes} from \"../routes/routes\"\r\nimport useApi from '../hooks/useApi'\r\nimport { API_URLS } from '../services/api.urls'\r\n\r\nconst Wrapper = styled(Box)({\r\n  padding: '0 0 0 10px',\r\n  background: '#f2f6fc',\r\n  display:'flex',\r\n  alignItems:'center',\r\n  cursor: 'pointer',\r\n  '& > div': {\r\n    display: 'flex',\r\n    width:'100%',\r\n    '& > p':{\r\n      fontSize:14\r\n    }\r\n  },\r\n})\r\n\r\nconst Indicator=styled(Typography)({\r\n  fontSize:'12px !important',\r\n  background:'#ddd',\r\n  color:'#222',\r\n  padding:'0 4px',\r\n  marginRight:6\r\n})\r\n\r\nconst Date=styled(Typography)({\r\n  marginLeft:'auto',\r\n  marginRight:20,\r\n  fontSize:12,\r\n  color:'#5f6368'\r\n})\r\n\r\nconst Email = ({ email,selectedEmails,setRefreshScreen,setSelectedEmails }) => {\r\n\r\n  const navigate = useNavigate()\r\n\r\n  const toggleStarredService=useApi(API_URLS.toggleStarredEmail)\r\n\r\n  const toggleStarredMails=()=>{\r\n    toggleStarredService.call({id:email._id,value:!email.starred})\r\n    setRefreshScreen(prevState=>!prevState)\r\n  }\r\n\r\n  const onValueChange=()=>{\r\n    if(selectedEmails.includes(email._id)){\r\n      setSelectedEmails(prevState=> prevState.filter(id=> id != email._id))\r\n    }else{\r\n      setSelectedEmails(prevState=>[...prevState, email._id])\r\n    }\r\n  } \r\n\r\n  return (\r\n    <Wrapper>\r\n      <Checkbox size='small' checked={selectedEmails.includes(email._id)} onChange={()=>onValueChange()} />\r\n      { email.starred ? \r\n      <Star fontSize='small' style={{marginRight:10,color:'#FFF200'}} onClick={()=>toggleStarredMails()} /> \r\n      :\r\n      <StarBorder fontSize='small' style={{marginRight:10}} onClick={()=>toggleStarredMails()} />\r\n}\r\n      <Box onClick={()=>navigate(routes.view.path, {state:{email:email}} )} >\r\n        <Typography style={{width:200,overflow:'hidden'}} >{email.name}</Typography>\r\n        <Indicator>Inbox</Indicator>\r\n        <Typography>{email.subject}{email.body && '-'} {email.body}</Typography>\r\n        <Date >\r\n          {(new window.Date(email.date)).getDate()}\r\n          {(new window.Date(email.date)).toLocaleString('default', { month: 'long' })}\r\n        </Date>\r\n      </Box>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Email\r\n","import { Box, Divider, Typography, styled } from '@mui/material'\r\nimport React from 'react'\r\n\r\nconst Component=styled(Box)({\r\n    display:'flex',\r\n    alignItems:'center',\r\n    flexDirection:'column',\r\n    marginTop:50,\r\n    opacity:'0.8',\r\n    width:'100%'\r\n})\r\n\r\nconst StyledDivider=styled(Divider)({\r\n\r\n})\r\n\r\nconst NoMails = ({message}) => {\r\n  return (\r\n    <Component>\r\n      <Typography>{message.heading}</Typography>\r\n      <Typography>{message.subHeading}</Typography>\r\n      <StyledDivider/>\r\n    </Component>\r\n  )\r\n}\r\n\r\nexport default NoMails\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useOutletContext, useParams } from 'react-router-dom'\r\nimport useApi from \"../hooks/useApi\"\r\nimport {API_URLS} from \"../services/api.urls\"\r\nimport {Checkbox,Box, List, ListItem} from \"@mui/material\"\r\nimport { DeleteOutline } from \"@mui/icons-material\"\r\nimport Email from './Email'\r\nimport NoMails from './common/NoMails'\r\nimport { EMPTY_TABS } from '../constants/constant'\r\n \r\nconst Emails = () => {\r\n\r\n  const [selectedEmails,setSelectedEmails]=useState([])\r\n\r\n  const [refreshScreen,setRefreshScreen]=useState(false)\r\n\r\n  const openDrawer=useOutletContext()\r\n\r\n  const {type}=useParams()\r\n\r\n  const getEmailsService=useApi(API_URLS.getEmailFromType)\r\n  const moveEmailsToBinService=useApi(API_URLS.moveEmailsToBin)\r\n  const deleteEmailService= useApi(API_URLS.deleteEmail)\r\n\r\n  useEffect(()=>{\r\n    getEmailsService.call({},type)\r\n  },[type,refreshScreen])\r\n\r\n  const selectAllEmails=(e)=>{\r\n    if(e.target.checked){\r\n      const emails = getEmailsService?.response?.map(email=>(\r\n        email._id\r\n      ))\r\n      setSelectedEmails(emails)\r\n    }else{\r\n      setSelectedEmails([])\r\n    }\r\n  }\r\n\r\n  const deleteSelectedEmails=(e)=>{\r\n    if(type === 'bin'){\r\n      deleteEmailService.call(selectedEmails)\r\n    }else{\r\n      moveEmailsToBinService.call(selectedEmails);\r\n    }\r\n    setRefreshScreen(prevState=>!prevState)\r\n  }\r\n\r\n  return (\r\n    <Box style={ openDrawer ? {marginLeft:250,width:'calc(100% - 250px)',marginTop:'65px'}: {width:'100%' ,marginTop:'65px'}} >\r\n      <Box style={{padding:\"20px 10px 0px 10px\", display:'flex', alignItems:'center'}} >\r\n        <Checkbox size='small' onChange={(e)=> selectAllEmails(e)} />\r\n        <DeleteOutline onClick={(e)=>deleteSelectedEmails(e)} />\r\n      </Box>\r\n        <List>\r\n          {\r\n            getEmailsService?.response?.map(email=>(\r\n              <Email key={email._id} email={email} selectedEmails={selectedEmails} setRefreshScreen={setRefreshScreen} setSelectedEmails={setSelectedEmails}  />\r\n            ))\r\n          }\r\n        </List>\r\n        {\r\n          getEmailsService?.response?.length === 0 &&\r\n          <NoMails message={EMPTY_TABS[type]} />\r\n        }\r\n      </Box>\r\n  )\r\n}\r\n\r\nexport default Emails\r\n","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\r\nexport const emptyInbox = 'https://miro.medium.com/max/1088/1*DhOnyEHovQZ31rH00-VUDw.png';\r\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\r\n\r\nexport const VIEWS = {\r\n    inbox: 'inbox',\r\n    starred: 'starred',\r\n    sent: 'sent',\r\n    drafts: 'drafts'\r\n}\r\n\r\nexport const EMPTY_TABS = {\r\n    inbox: {\r\n        heading: 'Your inbox is empty',\r\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\r\n    },\r\n    drafts: {\r\n        heading: \"You don't have any saved drafts.\",\r\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\r\n    },\r\n    starred: {\r\n        heading: 'No starred messages',\r\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\r\n    },\r\n    sent: {\r\n        heading: 'No sent messages!',\r\n        subHeading: 'Send one now!'\r\n    },\r\n    bin: {\r\n        heading: 'No conversations in Bin.',\r\n        subHeading: ''\r\n    }\r\n}","import axios from \"axios\"\r\n\r\nconst API_URL=''\r\n\r\nconst API_GMAIL =async (urlObject,payload,type)=>{\r\n    return await axios({\r\n        method:urlObject.method,\r\n        url:`${API_URL}/${urlObject.endpoint}/${type}`,\r\n        data:payload\r\n    })\r\n}\r\n\r\nexport default API_GMAIL;","import { useState } from \"react\";\r\nimport API from \"../services/api\"\r\n\r\nconst useApi = (urlObject) => {\r\n\r\n    const [response,setResponse]=useState(null)\r\n    const [error,setError]=useState(\"\")\r\n    const [isLoading,setIsLoading]=useState(false)\r\n\r\n    const call = async(payload,type='') => {\r\n        setResponse(null);\r\n        setError(\"\");\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            let res = await API(urlObject,payload,type);\r\n            setResponse(res.data)\r\n        } catch (error) {\r\n            setError(error.message)\r\n        }finally{\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n    return {call,response,error,isLoading}\r\n}\r\n\r\nexport default useApi;","export const API_URLS = {\r\n    saveSentEmail:{\r\n        endpoint:'save',\r\n        method:\"POST\",\r\n        \r\n    },\r\n    getEmailFromType:{\r\n        endpoint:'emails',\r\n        method:'GET'\r\n    },\r\n    saveDraftEmails:{\r\n        endpoint:'save-draft',\r\n        method:'POST'\r\n    },\r\n    moveEmailsToBin:{\r\n        endpoint:'bin',\r\n        method:'POST'\r\n    },\r\n    toggleStarredEmail:{\r\n        endpoint:'starred',\r\n        method:'POST'\r\n    },\r\n    deleteEmail:{\r\n        endpoint:'delete',\r\n        method:'DELETE'\r\n    }\r\n}"],"names":["Wrapper","styled","Box","padding","background","display","alignItems","cursor","width","fontSize","Indicator","Typography","color","marginRight","Date","marginLeft","_ref","email","selectedEmails","setRefreshScreen","setSelectedEmails","navigate","useNavigate","toggleStarredService","useApi","API_URLS","toggleStarredEmail","toggleStarredMails","call","id","_id","value","starred","prevState","_jsxs","children","_jsx","Checkbox","size","checked","includes","onChange","filter","concat","_toConsumableArray","Star","style","onClick","StarBorder","routes","view","path","state","overflow","name","subject","body","window","date","getDate","toLocaleString","month","Component","flexDirection","marginTop","opacity","StyledDivider","Divider","message","heading","subHeading","_getEmailsService$res2","_getEmailsService$res3","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","refreshScreen","openDrawer","useOutletContext","type","useParams","getEmailsService","getEmailFromType","moveEmailsToBinService","moveEmailsToBin","deleteEmailService","deleteEmail","useEffect","e","target","_getEmailsService$res","emails","response","map","selectAllEmails","DeleteOutline","List","Email","length","NoMails","EMPTY_TABS","gmailLogo","emptyProfilePic","inbox","drafts","sent","bin","API_GMAIL","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlObject","payload","wrap","_context","prev","next","axios","method","url","endpoint","data","abrupt","stop","_x","_x2","_x3","apply","arguments","setResponse","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","undefined","API","t0","finish","saveSentEmail","saveDraftEmails"],"sourceRoot":""}